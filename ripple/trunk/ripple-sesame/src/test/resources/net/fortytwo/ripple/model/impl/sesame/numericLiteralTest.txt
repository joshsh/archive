# Test xsd:float

# Note: range and precision issues, floating-point edge cases, and operations
# with mixed types (e.g. the addition of an int and a double) are not yet tested.

# abs(int) -> int
abs	42	=	42
abs	0	=	0
abs	-42	=	42
# abs(long) -> long
abs	42l	=	42l
abs	0l	=	0l
abs	-42l	=	42l
# abs(double) -> double
abs	42.0	=	42.0
abs	0.0	=	0.0
abs	-42.0	=	42.0

# neg(int) -> int
neg	42	= 	-42
neg	0	=	0
neg	-42	=	42
# neg(long) -> long
neg	42l	= 	-42l
neg	0l	=	0l
neg	-42l	=	42l
# neg(double) -> double
neg	42.0	= 	-42.0
neg	0.0	=	0.0
neg	-42.0	=	42.0

# add(int, int) -> int
add	1	2	=	3
add	2	1	=	3
add	0	42	=	42
add	42	0	=	42
add	1	-2	=	-1
add	-42	42	=	0
# add(long, long) -> long
add	1l	2l	=	3l
add	2l	1l	=	3l
add	0l	42l	=	42l
add	42l	0l	=	42l
add	1l	-2l	=	-1l
add	-42l	42l	=	0l
# add(double, double) -> double
add	1.0	2.0	=	3.0
add	2.0	1.0	=	3.0
add	0.0	42.0	=	42.0
add	42.0	0.0	=	42.0
add	1.0	-2.0	=	-1.0
add	-42.0	42.0	=	0.0

# sub(int, int) -> int
sub	1	2	=	-1
sub	2	1	=	1
sub	0	42	=	-42
sub	42	0	=	42
sub	1	-2	=	3
sub	42	42	=	0
# sub(long, long) -> long
sub	1l	2l	=	-1l
sub	2l	1l	=	1l
sub	0l	42l	=	-42l
sub	42l	0l	=	42l
sub	1l	-2l	=	3l
sub	42l	42l	=	0l
# sub(double, double) -> double
sub	1.0	2.0	=	-1.0
sub	2.0	1.0	=	1.0
sub	0.0	42.0	=	-42.0
sub	42.0	0.0	=	42.0
sub	1.0	-2.0	=	3.0
sub	42.0	42.0	=	0.0

# mul(int, int) -> int
mul	42	1	=	42
mul	1	42	=	42
mul	42	0	=	0
mul	0	42	=	0
mul	2	3	=	6
mul	3	2	=	6
mul	2	-3	=	-6
mul	-2	-3	=	6
# mul(long, long) -> long
mul	42l	1l	=	42l
mul	1l	42l	=	42l
mul	42l	0l	=	0l
mul	0l	42l	=	0l
mul	2l	3l	=	6l
mul	3l	2l	=	6l
mul	2l	-3l	=	-6l
mul	-2l	-3l	=	6l
# mul(double, double) -> double
mul	42.0	1.0	=	42.0
mul	1.0	42.0	=	42.0
mul	42.0	0.0	=	0.0
mul	0.0	42.0	=	0.0
mul	2.0	3.0	=	6.0
mul	3.0	2.0	=	6.0
mul	2.0	-3.0	=	-6.0
mul	-2.0	-3.0	=	6.0
mul	25.0	0.5	=	12.5

# div(int, int) -> int
div	42	2	=	21
div	42	42	=	1
div	2	5	=	0
div	2	-5	=	0
div	42	-2	=	-21
div	42	1	=	42
div	42	0	=	error
# div(long, long) -> long
div	42l	2l	=	21l
div	42l	42l	=	1l
div	2l	5l	=	0l
div	2l	-5l	=	0l
div	42l	-2l	=	-21l
div	42l	1l	=	42l
div	42l	0l	=	error
# div(double, double) -> double
div	42.0	2.0	=	21.0
div	42.0	42.0	=	1.0
div	2.0	5.0	=	0.4
div	2.0	-5.0	=	-0.4
div	42.0	-2.0	=	-21.0
div	42.0	1.0	=	42.0
div	42.0	0.0	=	infinity
div	1.0	0.5	=	2.0

# mod(int, int) -> int
mod	42	15	=	12
mod 42	-15	=	12
mod -42	15	=	-12
mod -42	-15	=	-12
mod	15	42	=	15
mod 0	42	=	0
mod	42	0	=	error
# mod(long, long) -> long
mod	42l	15l	=	12l
mod 42l	-15l	=	12l
mod -42l	15l	=	-12l
mod -42l	-15l	=	-12l
mod	15l	42l	=	15l
mod 0l	42l	=	0l
mod	42l	0l	=	error
# mod(double, double) -> double
mod	42.0	15.0	=	12.0
mod 42.0	-15.0	=	12.0
mod -42.0	15.0	=	-12.0
mod -42.0	-15.0	=	-12.0
mod	15.0	42.0	=	15.0
mod 0.0	42.0	=	0.0
# FIXME -- is this correct?
mod	42.0	0.0	=	0.0

# pow(int, int) -> int
pow	2	6	=	64
pow	2	-1	=	0
pow -1	3	=	-1
pow	42	0	=	1
pow 42	1	=	42
# pow(long, long) -> long
pow	2l	6l	=	64l
pow	2l	-1l	=	0l
pow -1l	3l	=	-1l
pow	42l	0l	=	1l
pow 42	1	=	42
# pow(double, double) -> double
pow	2.0	6.0	=	64.0
pow	2.0	-1.0	=	0.5
pow -1.0	3.0	=	-1.0
pow	42.0	0.0	=	1.0
pow 42.0	1.0	=	42.0
pow 0.5	3.0	=	0.125
pow	64.0	0.5	=	8.0
