@prefix owl:    <http://www.w3.org/2002/07/owl#>.
@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rpl:    <http://fortytwo.net/2007/03/ripple/schema#> .
@prefix stack:  <http://fortytwo.net/2007/08/ripple/stack#> .
@prefix xsd:    <http://www.w3.org/2001/XMLSchema#> .

stack:and
	a rpl:Function ;
	rpl:arity 2 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rdfs:comment "a boolean value (stack:true or stack:false)" ;
			rpl:parameterType rpl:Function ;
			rpl:isTransparent true ]
		[
			rdfs:label "y" ;
			rdfs:comment "a boolean value (stack:true or stack:false)" ;
			rpl:parameterType rpl:Function ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType rpl:Function ;
	rdfs:label "and" ;
	rdfs:comment "x y  =>  z  -- where z is true if x and y are true, otherwise false" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#and> ;
	.

stack:apply
	a rpl:Function ;
	rpl:arity 1 ;
	rpl:parameters (
		[
			rdfs:label "p" ;
			rdfs:comment "the program to be executed" ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "apply" ;
	rdfs:comment "p  => p!  -- push an active copy of p, or 'execute p'" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#i> ;
	.

stack:ary
	a rpl:Function ;
	rpl:arity 2 ;
	rpl:parameters (
		[
			rdfs:label "n" ;
			rdfs:comment "the (minimum) arity of the resulting function" ;
			rpl:parameterType xsd:integer ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "ary" ;
	rdfs:comment "n  =>  f -- where f is an n-ary version of the id function" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#ary> ;
	.

stack:at
	a rpl:Function ;
	rpl:arity 2 ;
	rpl:parameters (
		[
			rdfs:label "l" ;
			rdfs:comment "a List" ;
			rpl:parameterType rdf:List ;
			rpl:isTransparent true ]
		[
			rdfs:label "i" ;
			rdfs:comment "a list index" ;
			rpl:parameterType xsd:integer ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "at" ;
	rdfs:comment "l i  =>  l[i]  -- pushes the member of List l at index i.  Note: lists are 1-indexed" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#at> ;
	.

stack:branch
	a rpl:Function ;
	rpl:arity 3 ;
	rpl:parameters (
		[
			rdfs:label "b" ;
			rpl:parameterType rdf:List ;
			rpl:isTransparent true ]
		[
			rdfs:label "t" ;
			rdfs:comment "this program is executed if the condition is true" ;
			rpl:parameterType rdf:List ;
			rpl:isTransparent true ]
		[
			rdfs:label "f" ;
			rdfs:comment "this program is executed if the condition is false" ;
			rpl:parameterType rpl:Function ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "branch" ;
	rdfs:comment "b t f  =>  p!  -- where p is t if b is true, f if b is false" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#branch> ;
	.

stack:cat
	a rpl:Function ;
	rpl:arity 2 ;
	rpl:parameters (
		[
			rdfs:label "l1" ;
			rdfs:comment "a List" ;
			rpl:parameterType rdf:List ;
			rpl:isTransparent true ]
		[
			rdfs:label "l2" ;
			rdfs:comment "a List" ;
			rpl:parameterType rdf:List ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType rdf:List ;
	rdfs:label "cat" ;
	rdfs:comment "l1 l2  =>  l3  -- where l3 is the concatenation of Lists l1 and l2" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#cat> ;
	.

stack:choice
	a rpl:Function ;
	rpl:arity 3 ;
	rpl:parameters (
		[
			rdfs:label "b" ;
			rdfs:comment "a boolean value (stack:true or stack:false)" ;
			rpl:parameterType rpl:Function ;
			rpl:isTransparent true ]
		[
			rdfs:label "t" ;
			rdfs:comment "the value chosen if b is true" ;
			rpl:isTransparent true ]
		[
			rdfs:label "f" ;
			rdfs:comment "the value chosen if b is not true" ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType rpl:Function ;
	rdfs:label "choice" ;
	rdfs:comment "b t f  =>  x  -- where x is t if b is true, otherwise f" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#choice> ;
	.

stack:cons
	a rpl:Function ;
	rpl:arity 2 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rpl:isTransparent true ]
		[
			rdfs:label "l" ;
			rdfs:comment "a List" ;
			rpl:parameterType rdf:List ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType rdf:List ;
	rdfs:label "cons" ;
	rdfs:comment "x l  =>  l2  -- where the first member of l2 is x and the rest of l2 is l" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#cons> ;
	.

stack:dip
	a rpl:Function ;
	rpl:arity 2 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rdfs:comment "placed above the executed program y on the stack" ;
			rpl:isTransparent true ]
		[
			rdfs:label "y" ;
			rdfs:comment "the program to be executed" ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "dip" ;
	rdfs:comment "x y  =>  y! x" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#dip> ;
	.

stack:dipd
	a rpl:Function ;
	rpl:arity 3 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rdfs:comment "placed above the executed program y on the stack" ;
			rpl:isTransparent true ]
		[
			rdfs:label "y" ;
			rdfs:comment "the program to be executed" ;
			rpl:isTransparent true ]
		[
			rdfs:label "z" ;
			rdfs:comment "the program to be executed" ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "dipd" ;
	rdfs:comment "x y z  =>  z! x y" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#dipd> ;
	.

stack:dup
	a rpl:Function ;
	rpl:arity 1 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "dup" ;
	rdfs:comment "x  =>  x x" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#dup> ;
	.

stack:dupd
	a rpl:Function ;
	rpl:arity 2 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rpl:isTransparent true ]
		[
			rdfs:label "y" ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "dupd" ;
	rdfs:comment "x y  =>  x x y" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#dupd> ;
	.

stack:dupdd
	a rpl:Function ;
	rpl:arity 3 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rpl:isTransparent true ]
		[
			rdfs:label "y" ;
			rpl:isTransparent true ]
		[
			rdfs:label "z" ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "dupdd" ;
	rdfs:comment "x y z  =>  x x y z" ;
	.

stack:false
	a rpl:Function ;
	rpl:arity 2 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rpl:isTransparent true ]
		[
			rdfs:label "y" ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "false" ;
	rdfs:comment "x y  =>  y   -- note: in Joy, false is a literal value, not a function" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#false> ;
	.

stack:fold
	a rpl:Function ;
	rpl:arity 3 ;
	rpl:parameters (
		[
			rdfs:label "l" ;
			rdfs:comment "a List through which to fold p" ;
			rpl:parameterType rdf:List ;
			rpl:isTransparent true ]
		[
			rdfs:label "v0" ;
			rdfs:comment "initial value" ;
			rpl:isTransparent true ]
		[
			rdfs:label "p" ;
			rdfs:comment "a binary function" ;
			rpl:parameterType rdf:List ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "fold" ;
	rdfs:comment "l v0 p  =>  v  -- starting with value v0, sequentially push members of List l and combine with binary operator p" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#fold> ;
	.

stack:has
	a rpl:Function ;
	rpl:arity 2 ;
	rpl:parameters (
		[
			rdfs:label "l" ;
			rdfs:comment "a List" ;
			rpl:parameterType rdf:List ;
			rpl:isTransparent true ]
		[
			rdfs:label "x" ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType rpl:Function ;
	rdfs:label "has" ;
	rdfs:comment "l x  =>  b  -- where b is true if List l contains a member which is equal to x, otherwise false" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#has> ;
	.

stack:id
	a rpl:Function ;
	rpl:arity 0 ;
	rpl:parameters rdf:nil ;
	rdfs:label "id" ;
	rdfs:comment "id  =>  (identity function, does nothing)" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#id> ;
	.

stack:ifte
	a rpl:Function ;
	rpl:arity 3 ;
	rpl:parameters (
		[
			rdfs:label "elsePart" ;
			rdfs:comment "this program is executed if the condition is false" ;
			rpl:parameterType rpl:Function ;
			rpl:isTransparent true ]
		[
			rdfs:label "ifPart" ;
			rdfs:comment "this program is executed if the condition is true" ;
			rpl:parameterType rdf:List ;
			rpl:isTransparent true ]
		[
			rdfs:label "b" ;
			rpl:parameterType rdf:List ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "ifte" ;
	rdfs:comment "b t f =>  p!  -- where p is t if /b evaluates to true, and f if it evaluates to false" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#ifte> ;
	.

stack:in
	a rpl:Function ;
	rpl:arity 2 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rpl:isTransparent true ]
		[
			rdfs:label "l" ;
			rdfs:comment "a List" ;
			rpl:parameterType rdf:List ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType rdf:List ;
	rdfs:label "in" ;
	rdfs:comment "x l  =>  b  -- where b is true if List l contains a member equal to x, otherwise false" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#in> ;
	.

stack:max
	a rpl:Function ;
	rpl:arity 1 ;
	rpl:parameters (
		[
			rdfs:label "l" ;
			rdfs:comment "a List" ;
			rpl:parameterType rdf:List ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType xsd:integer ;
	rdfs:label "max" ;
	rdfs:comment "l  =>  x   -- where x is the greatest member of l" ;
	.

stack:min
	a rpl:Function ;
	rpl:arity 1 ;
	rpl:parameters (
		[
			rdfs:label "l" ;
			rdfs:comment "a List" ;
			rpl:parameterType rdf:List ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType xsd:integer ;
	rdfs:label "min" ;
	rdfs:comment "l  =>  x   -- where x is the least member of l" ;
	.

stack:not
	a rpl:Function ;
	rpl:arity 1 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rdfs:comment "a boolean value (stack:true or stack:false)" ;
			rpl:parameterType rpl:Function ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType rpl:Function ;
	rdfs:label "not" ;
	rdfs:comment "x  =>  y  -- where y is true if x is false, otherwise false" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#not> ;
	.

stack:of
	a rpl:Function ;
	rpl:arity 2 ;
	rpl:parameters (
		[
			rdfs:label "i" ;
			rdfs:comment "a list index" ;
			rpl:parameterType xsd:integer ;
			rpl:isTransparent true ]
		[
			rdfs:label "l" ;
			rdfs:comment "a List" ;
			rpl:parameterType rdf:List ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "of" ;
	rdfs:comment "i l  =>  l[i]  -- pushes the member of List l at index i.  Note: lists are 1-indexed" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#of> ;
	.

stack:optApply
	a rpl:Function ;
	rpl:arity 1 ;
	rpl:parameters (
		[
			rdfs:label "p" ;
			rdfs:comment "the program to be executed" ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "optApply" ;
	rdfs:comment "p  =>  p?  -- optionally execute the program p" ;
	.

stack:or
	a rpl:Function ;
	rpl:arity 2 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rdfs:comment "a boolean value (stack:true or stack:false)" ;
			rpl:parameterType rpl:Function ;
			rpl:isTransparent true ]
		[
			rdfs:label "y" ;
			rdfs:comment "a boolean value (stack:true or stack:false)" ;
			rpl:parameterType rpl:Function ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType rpl:Function ;
	rdfs:label "or" ;
	rdfs:comment "x y  =>  z  -- where z is true if x or y is true, otherwise false" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#or> ;
	.

stack:plusApply
	a rpl:Function ;
	rpl:arity 1 ;
	rpl:parameters (
		[
			rdfs:label "p" ;
			rdfs:comment "the program to be executed" ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "plusApply" ;
	rdfs:comment "p  =>  p+  -- execute the program p at least one time, and up to any number of times" ;
	.

stack:pop
	a rpl:Function ;
	rpl:arity 1 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "pop" ;
	rdfs:comment "x  =>" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#pop> ;
	.

stack:popd
	a rpl:Function ;
	rpl:arity 2 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rpl:isTransparent true ]
		[
			rdfs:label "y" ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "popd" ;
	rdfs:comment "x y  =>  y" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#popd> ;
	.

stack:popdd
	a rpl:Function ;
	rpl:arity 3 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rpl:isTransparent true ]
		[
			rdfs:label "y" ;
			rpl:isTransparent true ]
		[
			rdfs:label "z" ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "popdd" ;
	rdfs:comment "x y z  =>  y z" ;
	.

stack:rangeApply
	a rpl:Function ;
	rpl:arity 3 ;
	rpl:parameters (
		[
			rdfs:label "p" ;
			rpl:isTransparent true ]
		[
			rdfs:label "max" ;
			rpl:parameterType xsd:integer ;
			rpl:isTransparent true ]
		[
			rdfs:label "min" ;
			rpl:parameterType xsd:integer ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "rangeApply" ;
	rdfs:comment "p min max  =>  ... p{min, max}  -- pushes between min (inclusive) and max (inclusive) active copies of the program p, or 'executes p min times to max times'" ;
	.

stack:rolldown
	a rpl:Function ;
	rpl:arity 3 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rpl:isTransparent true ]
		[
			rdfs:label "y" ;
			rpl:isTransparent true ]
		[
			rdfs:label "z" ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "rolldown" ;
	rdfs:comment "x y z  =>  y z x" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#rolldown> ;
	.

stack:rolldownd
	a rpl:Function ;
	rpl:arity 4 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rpl:isTransparent true ]
		[
			rdfs:label "y" ;
			rpl:isTransparent true ]
		[
			rdfs:label "z" ;
			rpl:isTransparent true ]
		[
			rdfs:label "w" ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "rolldownd" ;
	rdfs:comment "x y z w  =>  y z x w" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#rolldownd> ;
	.

stack:rollup
	a rpl:Function ;
	rpl:arity 3 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rpl:isTransparent true ]
		[
			rdfs:label "y" ;
			rpl:isTransparent true ]
		[
			rdfs:label "z" ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "rollup" ;
	rdfs:comment "x y z  =>  z x y" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#rollup> ;
	.

stack:rollupd
	a rpl:Function ;
	rpl:arity 4 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rpl:isTransparent true ]
		[
			rdfs:label "y" ;
			rpl:isTransparent true ]
		[
			rdfs:label "z" ;
			rpl:isTransparent true ]
		[
			rdfs:label "w" ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "rollupd" ;
	rdfs:comment "x y z w  =>  z x y w" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#rollupd> ;
	.

stack:rotate
	a rpl:Function ;
	rpl:arity 3 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rpl:isTransparent true ]
		[
			rdfs:label "y" ;
			rpl:isTransparent true ]
		[
			rdfs:label "z" ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "rotate" ;
	rdfs:comment "x y z  =>  z y x" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#rotate> ;
	.

stack:rotated
	a rpl:Function ;
	rpl:arity 4 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rpl:isTransparent true ]
		[
			rdfs:label "y" ;
			rpl:isTransparent true ]
		[
			rdfs:label "z" ;
			rpl:isTransparent true ]
		[
			rdfs:label "w" ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "rotated" ;
	rdfs:comment "x y z w  =>  z y x w" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#rotated> ;
	.

stack:size
	a rpl:Function ;
	rpl:arity 1 ;
	rpl:returnType xsd:integer ;
	rpl:parameters (
		[
			rdfs:label "l" ;
			rdfs:comment "a List" ;
			rpl:parameterType rdf:List ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType xsd:integer ;
	rdfs:label "size" ;
	rdfs:comment "l  =>  n   -- where n is the number of members of l" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#size> ;
	.

stack:starApply
	a rpl:Function ;
	rpl:arity 1 ;
	rpl:parameters (
		[
			rdfs:label "p" ;
			rdfs:comment "the program to be executed" ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "starApply" ;
	rdfs:comment "p  => p*  -- optionally execute the program p any number of times" ;
	.

stack:swap
	a rpl:Function ;
	rpl:arity 2 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rpl:isTransparent true ]
		[
			rdfs:label "y" ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "swap" ;
	rdfs:comment "x y  =>  y x" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#swap> ;
	.

stack:swapd
	a rpl:Function ;
	rpl:arity 3 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rpl:isTransparent true ]
		[
			rdfs:label "y" ;
			rpl:isTransparent true ]
		[
			rdfs:label "z" ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "swapd" ;
	rdfs:comment "x y z  =>  y x z" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#swapd> ;
	.

stack:swapdd
	a rpl:Function ;
	rpl:arity 4 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rpl:isTransparent true ]
		[
			rdfs:label "y" ;
			rpl:isTransparent true ]
		[
			rdfs:label "z" ;
			rpl:isTransparent true ]
		[
			rdfs:label "a" ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "swapdd" ;
	rdfs:comment "x y z a  =>  y x z a" ;
	.

stack:swons
	a rpl:Function ;
	rpl:arity 2 ;
	rpl:parameters (
		[
			rdfs:label "l" ;
			rdfs:comment "a List" ;
			rpl:parameterType rdf:List ;
			rpl:isTransparent true ]
		[
			rdfs:label "x" ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType rdf:List ;
	rdfs:label "swons" ;
	rdfs:comment "l x  =>  l2  -- where the first member of l2 is x and the rest of l2 is l" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#swons> ;
	.

stack:timesApply
	a rpl:Function ;
	rpl:arity 2 ;
	rpl:parameters (
		[
			rdfs:label "p" ;
			rpl:isTransparent true ]
		[
			rdfs:label "n" ;
			rpl:parameterType xsd:integer ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "timesApply" ;
	rdfs:comment "p n  =>  p{n}  -- pushes n active copies of the program p, or 'executes p n times'" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#times> ;
	.

stack:true
	a rpl:Function ;
	rpl:arity 2 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rpl:isTransparent true ]
		[
			rdfs:label "y" ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "true" ;
	rdfs:comment "x y  =>  y  -- note: in Joy, true is a literal value, not a function" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#true> ;
	.

stack:uncons
	a rpl:Function ;
	rpl:arity 1 ;
	rpl:parameters (
		[
			rdfs:label "l" ;
			rdfs:comment "a List" ;
			rpl:parameterType rdf:List ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType rdf:List ;
	rdfs:label "uncons" ;
	rdfs:comment "l  =>  f r  -- where f is the first member of l and r is the rest of l" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#uncons> ;
	.

stack:unswons
	a rpl:Function ;
	rpl:arity 1 ;
	rpl:parameters (
		[
			rdfs:label "l" ;
			rdfs:comment "a List" ;
			rpl:parameterType rdf:List ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType rdf:List ;
	rdfs:label "unswons" ;
	rdfs:comment "l  =>  r f  -- where f is the first member of l and r is the rest of l" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#unswons> ;
	.

stack:xor
	a rpl:Function ;
	rpl:arity 2 ;
	rpl:parameters (
		[
			rdfs:label "x" ;
			rdfs:comment "a boolean value (stack:true or stack:false)" ;
			rpl:parameterType rpl:Function ;
			rpl:isTransparent true ]
		[
			rdfs:label "y" ;
			rdfs:comment "a boolean value (stack:true or stack:false)" ;
			rpl:parameterType rpl:Function ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType rpl:Function ;
	rdfs:label "xor" ;
	rdfs:comment "x y  =>  z  -- where z is the logical exclusive disjunction of truth values x and y" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/stack#xor> ;
	.
