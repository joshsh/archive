@prefix owl:     <http://www.w3.org/2002/07/owl#>.
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rpl:     <http://fortytwo.net/2007/03/ripple/schema#> .
@prefix string:  <http://fortytwo.net/2007/07/ripple/string#> .
@prefix xsd:     <http://www.w3.org/2001/XMLSchema#> .

string:concat
	a rpl:Function ;
	rpl:arity 2 ;
	rpl:parameters (
		[
			rdfs:label "s1" ;
			rpl:parameterType xsd:string ;
			rpl:isTransparent true ]
		[
			rdfs:label "s2" ;
			rpl:parameterType xsd:string ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType xsd:string ;
	rdfs:label "concat" ;
	rdfs:comment "s1 s2  =>  s3  -- where s3 is the concatenation of s1 and s2" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/etc#strCat> ;
	.

string:endsWith
	a rpl:Function ;
	rpl:arity 2 ;
	rpl:parameters (
		[
			rdfs:label "s" ;
			rpl:parameterType xsd:string ;
			rpl:isTransparent true ]
		[
			rdfs:label "suffix" ;
			rpl:parameterType xsd:string ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "endsWith" ;
	rdfs:comment "s suffix  =>  b -- where b is true if the given string ends with the given suffix, otherwise false" ;
	.

string:length
	a rpl:Function ;
	rpl:arity 1 ;
	rpl:parameters (
		[
			rdfs:label "s" ;
			rpl:parameterType xsd:string ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType xsd:integer ;
	rdfs:label "length" ;
	rdfs:comment "s  =>  l -- where l is the length of string s" ;
	.

string:matches
	a rpl:Function ;
	rpl:arity 2 ;
	rpl:parameters (
		[
			rdfs:label "s" ;
			rpl:parameterType xsd:string ;
			rpl:isTransparent true ]
		[
			rdfs:label "regex" ;
			rpl:parameterType xsd:string ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "matches" ;
	rdfs:comment "s regex  =>  b -- where b is true if the given string matches the given regular expression, otherwise false" ;
	.

string:percentEncode
	a rpl:Function ;
	rpl:arity 1 ;
	rpl:parameters (
		[
			rdfs:label "plaintext" ;
			rpl:parameterType xsd:string ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType xsd:string ;
	rdfs:label "percentEncode" ;
	rdfs:comment "finds the percent encoding (per RFC 3986) of a string" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/etc#urlEncoding> ;
	.

string:replaceAll
	a rpl:Function ;
	rpl:arity 3 ;
	rpl:parameters (
		[
			rdfs:label "s" ;
			rpl:parameterType xsd:string ;
			rpl:isTransparent true ]
		[
			rdfs:label "regex" ;
			rpl:parameterType xsd:string ;
			rpl:isTransparent true ]
		[
			rdfs:label "replacement" ;
			rpl:parameterType xsd:string ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType xsd:string ;
	rdfs:label "replaceAll" ;
	rdfs:comment "s regex replacement  =>  s2 -- in which each occurrence of the given regular expression in s has been substituted with the given replacement" ;
	.

string:sha1
	a rpl:Function ;
	rpl:arity 1 ;
	rpl:parameters (
		[
			rdfs:label "plaintext" ;
			rpl:parameterType xsd:string ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType xsd:string ;
	rdfs:label "sha1" ;
	rdfs:comment "finds the sha1 hash of a string" ;
	owl:sameAs <http://fortytwo.net/2007/05/ripple/etc#sha1> ;
	.

string:split
	a rpl:Function ;
	rpl:arity 2 ;
	rpl:parameters (
		[
			rdfs:label "s" ;
			rpl:parameterType xsd:string ;
			rpl:isTransparent true ]
		[
			rdfs:label "regex" ;
			rpl:parameterType xsd:string ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType xsd:string ;
	rdfs:label "split" ;
	rdfs:comment "s regex  =>  (s1, s2, s3, ...) -- where s has been divided into substrings by occurrences of regular expression regex" ;
	.

string:startsWith
	a rpl:Function ;
	rpl:arity 2 ;
	rpl:parameters (
		[
			rdfs:label "s" ;
			rpl:parameterType xsd:string ;
			rpl:isTransparent true ]
		[
			rdfs:label "prefix" ;
			rpl:parameterType xsd:string ;
			rpl:isTransparent true ]
		) ;
	rdfs:label "startsWith" ;
	rdfs:comment "s prefix  =>  b -- where b is true if the given string begins with the given prefix, otherwise false" ;
	.

string:substring
	a rpl:Function ;
	rpl:arity 3 ;
	rpl:parameters (
		[
			rdfs:label "s" ;
			rpl:parameterType xsd:string ;
			rpl:isTransparent true ]
		[
			rdfs:label "beginIndex" ;
			rpl:parameterType xsd:integer ;
			rpl:isTransparent true ]
		[
			rdfs:label "endIndex" ;
			rpl:parameterType xsd:integer ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType xsd:string ;
	rdfs:label "substring" ;
	rdfs:comment "s beginIndex endIndex  =>  s2 -- where s2 is the substring of s which begins at the specified beginIndex and extends to the character at index endIndex - 1" ;
	.

string:toLowerCase
	a rpl:Function ;
	rpl:arity 1 ;
	rpl:parameters (
		[
			rdfs:label "s" ;
			rpl:parameterType xsd:string ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType xsd:string ;
	rdfs:label "toLowerCase" ;
	rdfs:comment "s  =>  s2 -- where s2 is equal to s with all characters converted to lower case" ;
	.

string:toUpperCase
	a rpl:Function ;
	rpl:arity 1 ;
	rpl:parameters (
		[
			rdfs:label "s" ;
			rpl:parameterType xsd:string ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType xsd:string ;
	rdfs:label "toUpperCase" ;
	rdfs:comment "s  =>  s2 -- where s2 is equal to s with all characters converted to upper case" ;
	.

string:trim
	a rpl:Function ;
	rpl:arity 1 ;
	rpl:parameters (
		[
			rdfs:label "s" ;
			rpl:parameterType xsd:string ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType xsd:string ;
	rdfs:label "trim" ;
	rdfs:comment "s  =>  s2 -- where s2 is equal to s with leading and trailing white space omitted" ;
	.

string:urlEncode
	a rpl:Function ;
	rpl:arity 1 ;
	rpl:parameters (
		[
			rdfs:label "plaintext" ;
			rpl:parameterType xsd:string ;
			rpl:isTransparent true ]
		) ;
	rpl:returnType xsd:string ;
	rdfs:label "urlEncode" ;
	rdfs:comment "finds the URL encoding (per application/x-www-form-urlencoded) of a string" ;
	.
