make 2>stderr.txt; cat stderr.txt
(with libxml-2.0.pc) 


- alpha-linux1
	- configure -- libxml2.so.2 is present, but neither AC_CHECK_LIB nor PKG_CHECK_MODULES detects it
		checking for xmlParserVersion in -lxml2... no
		configure: error: libxml2 not found. Phase2 cannot import or export data sets without it.
+ amd64-linux1
	+ configure
	+ make
? amd64-linux2 -- unavailable
+ openpower-linux1
	+ configure
	+ make
? ppc-osx1 -- unavailable
? ppc-osx2 -- unavailable
- sparc-solaris1 -- unavailable
- sparc-solaris2 -- unavailable
+ x86-freebsd1
	+ configure
	- make
		"Makefile", line 719: Need an operator
		make: fatal errors encountered -- cannot continue
			export AM_CFLAGS = -O2 --ansi -W -Wall $(DEBUG_FLAGS) -I$(PWD)/include/phase2
	+ gmake
		manager/Manager.c:504: warning: 't' might be used uninitialized in this function
x86-linux1
	- configure -- no libxml2
+ x86-linux2
	+ configure
	+ make
x86-netbsd1
	- configure -- no libxml2
x86-openbsd1
	- configure -- no libxml2
x86-solaris1 (slow!)
	+ configure
	- make --  missing 'ar' command
		false cru .libs/libp2prims.a .libs/p2-stubs.o .libs/combinator-impl.o .libs/xpm.o .libs/operators.o .libs/stdio.o .libs/stdlib.o .libs/string.o .libs/char.o .libs/cstring.o .libs/double.o .libs/int.o
		make[4]: *** [libp2prims.la] Error 1
		make[4]: Leaving directory `/home/users/t/tr/troika/phase2-0.8.1/src/import'
		make[3]: *** [all] Error 2
		make[3]: Leaving directory `/home/users/t/tr/troika/phase2-0.8.1/src/import'





IGNORE EVERYTHING BELOW THIS LINE
================================================================================

...unless you're me and you're cross-compiling for a Zaurus.





################################################################################
# Cross-compiling libxml2

export CC=your compiler
./configure with proper options
make
make install


################################################################################
# Cross-compile Phase2 for ARM.

This yielded an error-free, debuggable ARM phase2 executable:
1) generate phase2.so using the (crosstool) gcc4 cross-compiler
2) generate phase2 (with 'main') using (Embedix) gcc2 cross-compiler
3) put phase2.so in the device's /usr/lib and invoke phase2


ARM_PREFIX=/opt/Embedix/tools/

CROSSTOOL=/home/joshs/bin/crosstool-0.42
CROSSTOOL=/opt/crosstool/crosstool-0.42

ARM_PREFIX=$CROSSTOOL/result/gcc-4.1.0-glibc-2.3.2/arm-unknown-linux-gnu/arm-unknown-linux-gnu/

# First, cross-compile libxml2 and place the ARM libraries into $ARM_PREFIX/lib

# Necessary when using crosstools binaries.
PATH=$ARM_PREFIX/bin:$PATH

# Note: rationale behind also specifying --build:
#     http://www.gnu.org/software/autoconf/manual/autoconf-2.57/html_node/autoconf_164.html
./configure --host=arm-linux --build=i686-pc-linux-gnu --prefix=$ARM_PREFIX

make

# Look in here for the ARM executables and libraries:
#     src/.libs/


::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


%destructor

libtool --mode=execute gdb src/phase2

Qt4/C++

$(LIBOBJS) and $(ALLOCA)

     ./configure CC=c89 CFLAGS=-O2 LIBS=-lposix

./configure --host=arm-linux --with-linux=$ARM_PREFIX/include

The linker also needs to be arm-linux-ld not ld.


::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


