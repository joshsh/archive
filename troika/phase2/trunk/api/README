                                 P H A S E 2

Introduction
================================================================================

Phase2 is an experimental language API and interpreter which combines ideas from
functional programming and the Semantic Web.  This is the continuation of an
undergraduate compiler project and is not aimed at any particular user niche.
Its purpose, beyond the learning experience of building a functional language
"from the ground up", is as a proof-of-concept for a programming paradigm (if
that's not too broad a term) based on the concept of triples in the sense of
the Resource Description Framework.  Phase2 is intended not as yet another RDF
toolkit, but as the basis for a family of languages expressed in triples and
which use triples as their fundamental data structure.  Documentation and code
samples are forthcoming.  Meanwhile...


Requirements
================================================================================

* GNU Compiler Collection (GCC) -- http://www.gnu.org/software/gcc/
      Phase2 makes liberal use of the GNU C extension for nested functions, and
      will not compile as ANSI C.
* GNU make -- http://www.gnu.org/software/make/
      Note on BSD: the default "make" provided with most BSD distributions
      may fail to build Phase2.  You really do need gmake.
* GNU libtool -- http://www.gnu.org/software/libtool/
* libxml2 -- http://xmlsoft.org/
      For Debian users: "sudo apt-get install libxml2-dev"


Compiling Phase2
================================================================================

The Phase2 package uses GNU autotools and is built in the usual way:

    $ ./configure
    $ make
    $ make install

Note: if the configure script cannot find the libxml2 library (or the optional
ncurses and readline libraries), you will need to tell it where to look:

    $ ./configure LDFLAGS=-L/dir/containing/libxml2.so

Various options may be useful, e.g.

    $ ./configure --prefix=/usr --enable-debug

See ./INSTALL and the output of `configure --help` for more details.  See
./NOTES for a list of machines on which Phase2 has been built and tested.


Using the interpreter
================================================================================

To create a new data set:

    $ phase2

To load a data set:

    $ phase2 -f myfile.p2

Once you're talking to the interpreter, type "_help;" (without quotes) for some
introductory information.

Also try:

    $ phase2 --help


Building Phase2 from scratch
================================================================================

For this you will need the following additional tools:

* GNU autoconf -- http://www.gnu.org/software/autoconf/
* GNU automake -- http://www.gnu.org/software/automake/
* GNU bison or equivalent -- http://www.gnu.org/software/bison/
* GNU flex or equivalent -- http://www.gnu.org/software/flex/
* dot (optional) -- http://www.graphviz.org/
* doxygen -- http://www.doxygen.org/
* xsltproc -- http://xmlsoft.org/XSLT/

If all goes well, the following will produce a configure script:

    $ ./bootstrap.sh

You can remove all buildable sources with:

    $ ./cleanup.sh

Now ./configure and make as described above.


Building Phase2 with custom data types and primitive functions
================================================================================



















Bugs
================================================================================

Please send bug reports to parcour@gmail.com or use the bug tracker at:
    http://sourceforge.net/projects/phase2/
