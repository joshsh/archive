<?xml version="1.0" encoding="UTF-8" ?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xsd:element name="TypeReference">
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="xsd:string" />
				<xsd:enumeration value="xsd:integer" />
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<!-- This union should correspond 1:1 with the set of primitive types
  supported by the appropriate version of the language, and must include the
  PrimitiveFunction, PlaceHolder and Sequence types defined below. -->
	<xsd:element name="PrimitiveType">
		<xsd:simpleType>
			<xsd:union memberTypes="&#xD;&#xA;&#xD;&#xA;        PrimitiveFunction&#xD;&#xA;        PlaceHolder&#xD;&#xA;        Sequence&#xD;&#xA;        xsd:string&#xD;&#xA;        xsd:integer&#xD;&#xA;&#xD;&#xA;        " />
		</xsd:simpleType>
	</xsd:element>
	<!-- Define the PrimitiveFunction type. -->
	<xsd:element name="PrimitiveFunction">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Parameter" maxOccurs="unbounded">
					<xsd:complexType>
						<xsd:attribute name="name" type="xsd:string" />
						<xsd:attribute name="type" type="xsd:string" />
						<xsd:attribute name="transparency" type="xsd:string" />
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
			<!-- Note: restrictions on functionName are probably best left to
      specific parser applications. -->
			<xsd:attribute name="name" type="xsd:string" />
			<xsd:attribute name="returnType" type="xsd:string" />
		</xsd:complexType>
	</xsd:element>
	<!-- Define the PlaceHolder (empty) type -->
	<xsd:element name="PlaceHolder">
		<xsd:complexType />
	</xsd:element>
	<!-- Define the Sequence type -->
	<xsd:element name="Sequence">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Element" minOccurs="0" maxOccurs="unbounded" />
			</xsd:sequence>
			<xsd:attribute name="sequenceType">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="immediate" />
						<xsd:enumeration value="delayed" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<!-- Define the Association type (it's just an ordered pair of Elements) -->
	<xsd:element name="Association">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="key" type="Element" />
				<xsd:element name="target" type="Element" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<!-- Define the Element type.  An Element is an instance of a PrimitiveType together
  with an unordered (and possibly empty) collection of Associations -->
	<xsd:element name="Element">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="value" type="PrimitiveType" />
				<xsd:element ref="Association" minOccurs="0" maxOccurs="unbounded" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<!-- Define the DataSet type -->
	<xsd:element name="DataSet">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Element" maxOccurs="unbounded" />
			</xsd:sequence>
			<xsd:attribute name="name" type="xsd:string" />
			<xsd:attribute name="creationDate" type="xsd:date" />
			<xsd:attribute name="creationTime" type="xsd:time" />
		</xsd:complexType>
	</xsd:element>
</xsd:schema>