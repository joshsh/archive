<?xml version="1.0" encoding="utf-8"?>
<view:ViewColumn xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:view="view.*"
	initialize="constructor()">
    <mx:Script>
		<![CDATA[
			import mx.events.CloseEvent;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			import mx.controls.TextInput;
			import mx.controls.Button;
			import mx.controls.Alert;
        import view.View;
        import view.simple.SimpleView;
        import model.concepts.FirstClassItem;

		private var searchText:TextInput;
		
		private function constructor():void {
			this.searchComponent.visible = true;	
		}
		
		private function handleSearchResult(event:ResultEvent):void {
		    var queryResult:ArrayCollection = event.result as ArrayCollection;
            for (var i:int = 0; i < queryResult.length; i++) {
//FIXME                var wi:WeightedItem = queryResult.getItemAt(i) as WeightedItem;
//                this.addItem(wi.item);
            }		
		}
		
		public override function search():void {
			var query:String = this.searchInput.text;
			//Alert.show("about to query on: " + query);
			
			// TODO: this is strange -- handleSearchResult was originally a function defined within this function, but it simply
			// failed to make further method calls (although it had access to variables).  Perhaps it's not possible to call
			// methods from within an "internal" method in ActionScript.
			FlashMOB.dispatcher.freeTextQuery(query, handleSearchResult, null);	
		}
        	
        protected override function createView(item:FirstClassItem):View {
            return new SimpleView();
        }
		]]>
	</mx:Script>
</view:ViewColumn>
