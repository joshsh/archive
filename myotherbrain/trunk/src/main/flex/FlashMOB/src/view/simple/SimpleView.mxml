<?xml version="1.0" encoding="utf-8"?>
<view:View xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:view="view.*"
	xmlns:root="*"
	xmlns:ponents="ponents.*"
	initialize="constructor()">
    <mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.ItemResponder;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.AsyncToken;
			import mx.rpc.events.ResultEvent;
			import mx.controls.Label;
			import mx.controls.List;
			import mx.controls.Text;
			import model.MOB;
			import mx.controls.Alert;
		
		[Bindable]
		private var _associations:ArrayCollection = new ArrayCollection();
		
		private function handler(event:ResultEvent):void {
			var coll:ArrayCollection = event.result as ArrayCollection;
			for (var i:int = 0; i < coll.length; i++) {
				_associations.addItem(coll.getItemAt(i));
				//Alert.show("objectBean: " + coll.getItemAt(i).objectBean.name);
			}
			
			// TODO: update dynamically
			this.associationsGrid.rowCount = _associations.length;	
			if (0 == _associations.length) {
				//this.associationsGrid.visible = false;
				//this.associationsGrid.height = 0;
			} else {
				this.associationsGrid.visible = true;
			}	
		}
					
		private function constructor():void {			
			FlashMOB.dispatcher.getObjectAssociations(this.item, handler, null);	
		}

        private function showInfo():void {
            var s:String = "";
            s += "URI: " + this.item.uri + "\n";
            if (null != this.item.creationTimeStamp) {
                s += "created: " + this.item.creationTimeStamp + "\n";
            }
            s += "sensitivity: " + MOB.getLocalName(this.item.sensitivity) + "\n";
				//if (this.item.emphasis) {
            s += "emphasis: " + this.item.emphasis + "\n";
				//}
            Alert.show(s, this.item.name);
        }

        private function selectSource():String {
            return StaticStuff.getSensitivityImageForItem(this.item);
        }
        
        private function showDescription():void {
        	Alert.show(this.item.description);	
        }
        
        private function dataChangedTmp():void {
        	//Alert.show("data has changed!");
        	//associationsGrid.rowCount = this._associations.length;
        }
		]]>
	</mx:Script>
    <mx:VBox width="100%" height="100%">
        <mx:Text htmlText="{this.item.richTextDescription}" truncateToFit="false" width="100%" doubleClick="showDescription()"/>
    	<mx:Image source="{this.item.icon}"/>
    	<mx:VBox paddingLeft="15" paddingRight="0" paddingTop="0" paddingBottom="1" width="100%">  		
	    	<mx:DataGrid id="associationsGrid" dataProvider="{this._associations}" rowCount="0" visible="false"
	    		selectable="false" showHeaders="false" dragEnabled="true"
	    		added="dataChangedTmp()" removed="dataChangedTmp()"
	    		width="100%" backgroundAlpha="0" borderStyle="none" variableRowHeight="true">
	    		<mx:columns>
	    			<mx:DataGridColumn itemRenderer="ponents.renderers.MinimalItemRenderer"/>
	    			<mx:DataGridColumn itemRenderer="ponents.renderers.MinimalSourceRenderer"/>
	    		</mx:columns>
	    	</mx:DataGrid>       
    	</mx:VBox>
    </mx:VBox>

    <mx:ControlBar paddingBottom="2" paddingRight="2">
        <mx:Spacer width="100%"/>
        <mx:Image source="{selectSource()}" alpha="0.25" click="showInfo()"/>
        <!--<ponents:SensitivityIcon data="{this.item}"/>-->
    </mx:ControlBar>
</view:View>
